require_relative 'lib/base.rb'

module EventHub

  # argument parsing
  @options = ::EventHub::ArgumentParser.parse(ARGV)

  # create instance of processor
  @processor = ::EventHub::<%= processor_module_name %>::<%= processor_class_name %>.new

  def self.processor_name
    @processor.name
  end

  # define logging facilities
  def self.logger
    @logger ||= begin
      multi = ::EventHub::Components::MultiLogger.new
      multi.add_device(EventHub::Components::Logger.stdout)
      multi.add_device(EventHub::Components::Logger.logstash(processor_name, @options.environment))
      multi
    end
  end

  # load configuration, exit when false is returned
  exit unless EventHub::Configuration.instance.load_file("config/#{@processor.name}.json",@options.environment)

  # start your processor
  @processor.start(@options.detached)
end
