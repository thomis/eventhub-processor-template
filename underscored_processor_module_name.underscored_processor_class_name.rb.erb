require_relative 'lib/base.rb'

module EventHub

  # argument parsing
  @options = EventHub::ArgumentParser.parse(ARGV)

  # create instance of processor
  @processor = EventHub::<%= processor_module_name %>::<%= processor_class_name %>.new

  # define logging facilities
  def self.logger
    unless @logger
      @logger = MultiLogger.new
      @logger.add_device(Logger.new(STDOUT))
      @logger.add_device(Logger.new(@logger.folder + "/#{@processor.name}.log",20,1024*1024*10))
    end
    @logger
  end

  # load configuration, exit when false is returned
  exit unless EventHub::Configuration.instance.load_file("config/#{@processor.name}.json",@options.environment)

  # start your processor
  @processor.start(@options.detached)
end
